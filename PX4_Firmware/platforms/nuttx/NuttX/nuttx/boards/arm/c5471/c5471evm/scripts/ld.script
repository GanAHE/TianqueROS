/************************************************************
 * boards/arm/c5471/c5471evm/scripts/ld.script
 *
 *   Copyright (C) 2007, 2011-2012, 2014 Gregory Nutt. All rights reserved.
 *   Author: Gregory Nutt <gnutt@nuttx.org>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name Gregory Nutt nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ************************************************************/

OUTPUT_ARCH(arm)
ENTRY(_stext)
SECTIONS
{
    /* Interrupt vector trampoline and command line parameters
     * are provided in IRAM by the rrload bootloader.  Vectors will be
     * copied into _svectors.
     */

    . = 0xffc00000;
    _svectors = ABSOLUTE(.);

    /* These are locations in IRAM where the rrload bootloader passes
     * information to the running program
     */

    . = 0xffc00020;
    __KernCommandLineMagicStr = .;  /* magic pattern string == "kcmdline-->" */
    . = 0xffc0002C;                 /* advance to .+strlen("kcmdline-->")+1 */
    __KernCommandLineOverride = .;  /* location of kernel command line string */

    . = 0xffc00100;
    __EtherMACMagicStr = .;         /* magic pattern string == "etherMAC-->" */
    . = 0xffc0010C;                 /* advance to .+strlen("etherMAC-->")+1 */
    __EtherMAC = .;


    /* The OS entry point is here */

    . = 0x10300000;
    .text : {
        _stext = ABSOLUTE(.);
        *(.text)
        *(.fixup)
        *(.gnu.warning)
        *(.rodata)
        *(.glue_7)
        *(.glue_7t)
         *(.got)                    /* Global offset table */
        _etext = ABSOLUTE(.);
    }

    _eronly = ABSOLUTE(.);          /* See below */
    . = ALIGN(4096);

    .data : ALIGN(4) {
        _sdata = ABSOLUTE(.);
        *(.data)
        CONSTRUCTORS
        . = ALIGN(4);
        _edata = ABSOLUTE(.);
    }

    .bss : ALIGN(4) {               /* BSS */
    _sbss = ABSOLUTE(.);
        *(.bss)
        *(COMMON)
        . = ALIGN(4);
        _ebss = ABSOLUTE(.);
    }

    /* Stabs debugging sections. */

    .stab 0 : { *(.stab) }
    .stabstr 0 : { *(.stabstr) }
    .stab.excl 0 : { *(.stab.excl) }
    .stab.exclstr 0 : { *(.stab.exclstr) }
    .stab.index 0 : { *(.stab.index) }
    .stab.indexstr 0 : { *(.stab.indexstr) }
    .comment 0 : { *(.comment) }
    .debug_abbrev 0 : { *(.debug_abbrev) }
    .debug_info 0 : { *(.debug_info) }
    .debug_line 0 : { *(.debug_line) }
    .debug_pubnames 0 : { *(.debug_pubnames) }
    .debug_aranges 0 : { *(.debug_aranges) }
}
